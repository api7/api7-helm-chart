# Default values for api7ee3.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

dashboard:
  replicaCount: 1
  image:
    repository: api7/api7-ee-3-integrated
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v3.2.6.0"

dp_manager:
  replicaCount: 1
  image:
    repository: api7/api7-ee-dp-manager
    pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
    tag: "v3.2.6.0"

imagePullSecret: ""
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

dashboard_service:
  type: ClusterIP
  port: 7080

dp_manager_service:
  type: ClusterIP
  port: 7900

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

busybox:
  image:
    repository: docker.io/busybox
    tag: 1.28

prometheus:
  builtin: true
  alertmanager:
    enabled: false
  server:
    enableRemoteWriteReceiver: true
    enableAdminAPI: true
    serviceAccount:
      create: false
    rbac:
      create: false
    persistence:
      enabled: true
      size: 120Gi
    service:
      type: ClusterIP
      ports:
        http: 9090
    configuration: ""

postgresql:
  host: api7ee3-postgresql
  port: 5432
  builtin: true
  primary:
    persistence:
      size: 256Gi
  readReplicas:
    persistence:
      size: 256Gi
  auth:
    username: api7ee
    password: changeme
    database: api7ee

dashboard_configuration:
  server:
    listen:
      host: "0.0.0.0"
      port: 7080
    cors:
      enabled: false
      access_control_allow_origin: "*"
      access_control_allow_credentials: "false"
      access_control_allow_headers: "*"
      access_control_allow_methods: "*"
  session_options_config:
    same_site: "lax"  # means the value SameSiteNoneMode
    secure: false
  authentication_config:
    session_secret: "changeme"
  user_manager:
    oidc_provider: "keycloak"
    logout_url: "https://login.api7.ai/v2/logout"
  login:
    source: DB
  log:
    level: info
    output: stderr
  database:
    type: postgres
    postgres:
      addr: api7ee3-postgresql:5432
      user: api7ee
      password: "changeme"
      database: api7ee
    # max_idle_conns: 10
    # max_open_conns: 30
  prometheus:
    addr: "http://api7ee3-prometheus-server:9090"
    whitelist:
      - "/api/v1/query_range"
      - "/api/v1/query"
      - "/api/v1/format_query"
      - "/api/v1/series"
      - "/api/v1/labels"
  console:
    addr: "http://127.0.0.1:3000"

dp_manager_configuration:
  server:
    listen:
      host: "0.0.0.0"
      port: 7900
    status_listen:
      host: "0.0.0.0"
      port: 7901
  log:
    level: info
    output: stderr
  database:
    type: postgres
    postgres:
      addr: api7ee3-postgresql:5432
      user: api7ee
      password: "changeme"
      database: api7ee
  prometheus:
    addr: "http://api7ee3-prometheus-server:9090"
