apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api7-ingress-controller-manager.name.fullname" . }}
  namespace: {{ .Release.Namespace }}
  annotations:
  {{- range $key, $value := .Values.deployment.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  labels:
    {{- include "api7-ingress-controller-manager.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      {{- include "api7-ingress-controller-manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.deployment.podAnnotations }}
        {{- range $key, $value := $.Values.deployment.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      labels:
        {{- include "api7-ingress-controller-manager.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
        volumeMounts:
        - name: {{ .Release.Name }}-ingress-config
          mountPath: /app/conf/config.yaml
          subPath: config.yaml
        {{- if .Values.webhook.enabled }}
        - name: webhook-certs
          mountPath: /certs
          readOnly: true
        {{- end }}
        ports:
        - name: webhook
          containerPort: {{ .Values.webhook.port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{- toYaml .Values.deployment.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.deployment.podSecurityContext | nindent 10 }}
      - name: adc-server
        image: "{{ .Values.adc.image.repository }}:{{ .Values.adc.image.tag }}"
        args:
        - "server"
        - "--listen"
        - "http://127.0.0.1:3000"
        - "--listen-status"
        - "3001"
        env:
        - name: ADC_RUNNING_MODE
          value: "ingress"
        - name: ADC_EXPERIMENTAL_FEATURE_FLAGS
          value: "remote-state-file,parallel-backend-request"
        ports:
        - name: http-status
          containerPort: 3001
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz/ready
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.adc.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.adc.securityContext | nindent 10 }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- tpl (. | toYaml) $ | nindent 8 }}
      {{- end }}
      volumes:
      - name: {{ .Release.Name }}-ingress-config
        configMap:
          name: {{ .Release.Name }}-ingress-config
      {{- if .Values.webhook.enabled }}
      - name: webhook-certs
        secret:
          secretName: {{ include "api7-ingress-controller-manager.webhook.secretName" . }}
      {{- end }}
      securityContext:
        runAsNonRoot: false
      serviceAccountName: {{ .Release.Name }}
      terminationGracePeriodSeconds: 10
