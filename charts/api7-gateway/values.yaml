#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

replicaCount: 1
image:
  registry: docker.io
  repository: api7/api7
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: dev

stream_proxy:
#  tcp:
#    - addr: 9001
#  udp:
#    - 9002

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
clusterDomain: cluster.local

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

customLuaSharedDicts: []
  # - name: foo
  #   size: 10k
  # - name: bar
  #   size: 1m

gateway:
  type: NodePort
  # type: LoadBalancer
  annotations: {}
  loadBalancerIP: ""
  # warn: should update the value of workerProcesses
  #       to the number of cpu cores that match the actual allocated resources.
  workerProcesses: auto
  http:
    enabled: true
    servicePort: 80
    port: 9080
    clientMaxBodySize: 0
  tls:
    enabled: true
    servicePort: 443
    port: 9443
    existingCASecret: ""
    certCAFilename: "ca.crt"
    http2:
      enabled: true
  metrics:
    enabled: true
    servicePort: 9091
    port: 9091

  ingress:
    enabled: false
    annotations:
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: apisix.local
        paths: []
    tls: []
  #  - secretName: apisix-tls
  #    hosts:
  #      - chart-example.local

# etcd configuration
# use the FQDN address or the IP of the etcd
etcd:
  # install etcd(v3) by default, set false if do not want to install etcd(v3) together,
  # in such a case, etcd.host should be configured so that existing ETCD cluster can be
  # used.
  builtin: false
  hosts:
    - http://etcd.host:2379 # host or ip e.g. http://172.20.128.89:2379
  prefix: "/api7"
  timeout: 30
  defaultPort: 2379
  auth:
    rbac:
      # No authentication by default
      enabled: false
      ## etcd user
      ##
      user: ""
      ## etcd password
      ##
      password: ""
    # Whether to set up secure transport to ETCD cluster.
    tls:
      enalbed: false
      # An existing secret stores the credentials to communicate with ETCD cluster.
      existingSecret: ""
      # Certificate filename used to communicate ETCD cluster.
      certFilename: "tls.crt"
      # Private key filename used to communicate ETCD cluster.
      certKeyFilename: "tls.key"
      verify: true

discovery:
  enabled: false
  registry:
      # Integration service discovery registry. E.g eureka\dns\nacos\consul_kv
      # reference:
      # https://apisix.apache.org/docs/apisix/discovery#configuration-for-eureka
      # https://apisix.apache.org/docs/apisix/discovery/dns#service-discovery-via-dns
      # https://apisix.apache.org/docs/apisix/discovery/consul_kv#configuration-for-consul-kv
      # https://apisix.apache.org/docs/apisix/discovery/nacos#configuration-for-nacos
      #
      # an eureka example:
      # eureka:
      #   host:
      #     - "http://${username}:${password}@${eureka_host1}:${eureka_port1}"
      #     - "http://${username}:${password}@${eureka_host2}:${eureka_port2}"
      #   prefix: "/eureka/"
      #   fetch_interval: 30
      #   weight: 100
      #   timeout:
      #     connect: 2000
      #     send: 2000
      #     read: 5000

# access log and error log configuration
logs:
  enableAccessLog: true
  accessLog: "/dev/stdout"
  accessLogFormat: '$remote_addr - $remote_user [$time_local] $http_host \"$request\" $status $body_bytes_sent $request_time \"$http_referer\" \"$http_user_agent\" $upstream_addr $upstream_status $upstream_response_time \"$upstream_scheme://$upstream_host$upstream_uri\"'
  accessLogFormatEscape: default
  errorLog: "/dev/stderr"
  errorLogLevel: "warn"

dns:
  resolvers:
    - 127.0.0.1
    - 172.20.0.10
    - 114.114.114.114
    - 223.5.5.5
    - 1.1.1.1
    - 8.8.8.8
  validity: 30
  timeout: 5

# APISIX plugins to be enabled
plugins:
  - api-breaker
  - authz-casbin
  - authz-keycloak
  - basic-auth
  # - batch-requests
  - client-control
  - consumer-restriction
  - cors
  - dubbo-proxy
  - echo
  - ext-plugin-pre-req
  - ext-plugin-post-req
  - error-log-logger
  - fault-injection
  - grpc-transcode
  - gzip
  - hmac-auth
  - http-logger
  - ip-restriction
  - jwt-auth
  - kafka-logger
  - key-auth
  - log-rotate
  - limit-conn
  - limit-count
  - limit-req
  - node-status
  - openid-connect
  - prometheus
  - proxy-cache
  - proxy-mirror
  - proxy-rewrite
  - real-ip
  - redirect
  - referer-restriction
  - request-id
  - request-validation
  - response-rewrite
  - serverless-post-function
  - serverless-pre-function
  - skywalking
  - sls-logger
  - syslog
  - tcp-logger
  - ua-restriction
  - udp-logger
  - uri-blocker
  - wolf-rbac
  - zipkin
  - server-info
  - traffic-split
stream_plugins:
  - mqtt-proxy
plugin_attr:
  log-rotate:
    interval: 3600    # rotate interval (unit: second)
    max_kept: 168     # max number of log files will be kept
  prometheus:
    export_uri: /apisix/prometheus/metrics
    enable_export_server: true
    export_addr:
      ip: "0.0.0.0"
      port: 9091
  server-info:
    report_ttl: 60       # live time for server info in etcd (unit: second)
    metrics_host: "${{POD_IP}}"
    metrics_port: "9091"
  dubbo-proxy:
    upstream_multiplex_count: 32

resources:
  limits:
    cpu: "2"
  requests:
    cpu: "50m"
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  enabled: false

api7-dashboard:
  # Whether to install api7-dashboard at the same time.
  enabled: false

busybox:
  image:
    registry: docker.io
    repository: busybox
    tag: 1.28

# Custom configuration snippet.
configurationSnippet:
  main: |

  httpStart: |

  httpEnd: |

  httpSrv: |

  httpAdmin: |

  stream: |
