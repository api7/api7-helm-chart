#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "api7-dashboard.fullname" . }}
  namespace: {{ .Release.Namespace }}
data:
  {{- if .Values.selfRegister.enabled }}
  self-register.sh: |-
    #!/usr/bin/env sh
    echo 'Checking the running of Manager API...'
    until nc -zw 1 127.0.0.1 {{ .Values.config.http.port }}; do
      echo 'Waiting for Manager API'
      sleep 1
    done
    token=`curl -s http://127.0.0.1:{{ .Values.config.http.port }}/apisix/admin/user/login -d '{"username":"admin", "password":"admin"}' | grep -o '"token":"[^\"]*"' | awk -F : '{print $2}' | tr -d '"'`
    {{- $global := . -}}
    {{ range $idx, $cluster := .Values.config.clusters }}
    {{ with $global }}
    echo '
    {
      "name": "dashboard-route-{{ $cluster.name }}",
      "uris": ["/*"],
      "hosts": ["{{ .Values.selfRegister.host }}"],
      "upstream": {
        "type": "roundrobin",
        "nodes": {
          "{{ include "api7-dashboard.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:{{ .Values.config.http.port }}": 1
        }
      }
    }' | curl http://127.0.0.1:{{ .Values.config.http.port }}/apisix/admin/routes/E08D6599-EF67-408A-8006-17D2B592C3D4?cluster_id={{ $cluster.name }} -XPUT -H "Authorization: $token" -v -d @-
    {{ end -}}
    {{ end -}}
  {{ end }}
  conf.yaml: |-
    conf:
      {{- if gt (len .Values.config.allowList) 0 }}
      allow_list:
        {{- range .Values.config.allowList }}
        - {{ . }}
        {{- end }}
      {{- end }}
      {{- if gt (len .Values.config.allowAdmin) 0 }}
      allow_admin:
        {{- range .Values.config.allowAdmin }}
        - {{ . }}
        {{- end }}
      {{- end }}
      {{- if gt (len .Values.config.trustedProxies) 0 }}
      trusted_proxies:
        {{- range .Values.config.trustedProxies }}
        - {{ . }}
        {{- end }}
      {{- end }}
      listen:
        host: 0.0.0.0     # `manager api` listening ip or host name
        port: {{ .Values.config.http.port }} # `manager api` listening port
      {{- if .Values.config.tls.enabled }}
      ssl:
        enable: true
        host: "0.0.0.0"
        port: {{ .Values.config.tls.port }}
        cert: "/usr/local/apisix-dashboard/tls/tls.crt"
        key: "/usr/local/apisix-dashboard/tls/tls.key"
        {{- if .Values.config.tls.mtls_enabled }}
        client_cert_auth: true
        trusted_ca: "/usr/local/apisix-dashboard/tls/ca.crt"
        {{- end }}
      {{- end }}
      {{- if or .Values.prometheus.builtin (gt (len .Values.prometheus.clusters) 0) }}
      prometheus:
        host:
        {{- if .Values.prometheus.builtin }}
        - "http://{{ .Release.Name }}-prometheus-server.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:80"
        {{- else -}}
          {{ range .Values.prometheus.clusters }}
        - {{ . }}
          {{ end }}
        {{- end -}}
      {{- end }}
      audit:
        enable: {{ .Values.config.audit.enabled }}
      {{- if or .Values.opensearch.builtin (gt (len .Values.opensearch.hosts) 0) }}
      opensearch:
        hosts:
        {{- if .Values.opensearch.builtin }}
          - "https://opensearch-cluster-master.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:9200"
        {{- else -}}
          {{ range .Values.opensearch.hosts }}
          - {{ . }}
          {{ end }}
        {{- end }}
        {{- if .Values.opensearch.auth.rbac.username }}
        username: {{ .Values.opensearch.auth.rbac.username | quote }}
        password: {{ .Values.opensearch.auth.rbac.password | quote }}
        {{- end }}
        insecure_skip_verify: {{ not .Values.opensearch.auth.tls.verify }}
      {{- end }}
      etcd:
        name: {{ .Values.etcd.name }}
        {{- if .Values.etcd.builtin }}
        endpoints:
          - "http://{{ .Release.Name }}-etcd.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:{{ .Values.etcd.service.ports.client }}"
        {{- else }}
        endpoints:
          {{- range $value := .Values.etcd.hosts }}
          - "{{ $value }}"
          {{- end }}
        {{- end }}
        enable_auth: {{ .Values.etcd.auth.rbac.enabled }}
        username: {{ .Values.etcd.auth.rbac.user | quote }}
        password: {{ .Values.etcd.auth.rbac.password | quote }}
        prefix: {{ .Values.etcd.prefix }}
        {{- if .Values.etcd.auth.tls.enabled }}
        mtls:
          enable: true
          key_file: "/usr/local/apisix-dashboard/self-etcd-ssl/{{ .Values.etcd.auth.tls.certKeyFilename }}"
          cert_file: "/usr/local/apisix-dashboard/self-etcd-ssl/{{ .Values.etcd.auth.tls.certFilename }}"
          ca_file: "/usr/local/apisix-dashboard/self-etcd-ssl/{{ .Values.etcd.auth.tls.certCAFilename }}"
        {{- else }}
        mtls:
          enable: false
          key_file: ""
          cert_file: ""
          ca_file: ""
        {{- end }}
      log:
        error_log:
          level: {{ .Values.config.log.error_log.level }}       # supports levels, lower to higher: debug, info, warn, error, panic, fatal
          file_path:
            {{ .Values.config.log.error_log.file_path }}  # supports relative path, absolute path, standard output
                            # such as: logs/error.log, /tmp/logs/error.log, /dev/stdout, /dev/stderr
        access_log:
          file_path:
            {{ .Values.config.log.access_log.file_path }}  # supports relative path, absolute path, standard output
                            # such as: logs/access.log, /tmp/logs/access.log, /dev/stdout, /dev/stderr
                            # log example: 2020-12-09T16:38:09.039+0800 INFO filter/logging.go:46 /apisix/admin/routes/r1 {"status": 401, "host": "127.0.0.1:9000", "query": "asdfsafd=adf&a=a", "requestId": "3d50ecb8-758c-46d1-af5b-cd9d1c820156", "latency": 0, "remoteIP": "127.0.0.1", "method": "PUT", "errs": []}
      security:
        access_control_allow_origin: {{ .Values.config.security.access_control_allow_origin }}
        access_control_allow_credentials: {{ .Values.config.security.access_control_allow_credentials }}
        access_control_allow_headers: {{ .Values.config.security.access_control_allow_headers }}
        access_control-allow_methods: {{ .Values.config.security.access_control_allow_methods }}
        x_frame_options: {{ .Values.config.security.x_frame_options }}
        content_security_policy: {{ .Values.config.security.content_security_policy }}

    authentication:
      secret:
        {{ .Values.config.authentication.secret }}  # secret for jwt token generation.
                            # NOTE: Highly recommended to modify this value to protect `manager api`.
                            # if it's default value, when `manager api` start , it will generate a random string to replace it.
      expire_time: {{ .Values.config.authentication.expire_time }}     # jwt token expire time, in second
      api_key: {{ .Values.config.authentication.api_key }}     # make simple api key authentication for some API, such as webhook.
      {{- if gt (int .Values.config.authentication.allow_login_failed_times) 0}}
      allow_login_failed_times: {{.Values.config.authentication.allow_login_failed_times}}    # the maximum number of login failures allowed, if the number of failed login attempts exceeds the limit within a certain period of time, the account will be locked
      login_failed_stat_duration: {{.Values.config.authentication.login_failed_stat_duration}}  # the maximum allowable login failures statistics duration.
      login_failed_lock_duration: {{.Values.config.authentication.login_failed_lock_duration}}  # the account locked duration.
      {{ end }}
      session_age: {{.Values.config.authentication.session_age }}
      session_store_prefix: {{.Values.config.authentication.session_store_prefix | quote }}
      users:
      {{ range .Values.config.authentication.users }}
        - username: {{ .username }}
          password: {{ .password }}
      {{ end }}

      {{- if .Values.config.authentication.ldap }}
      ldap:
        enable: {{ .Values.config.authentication.ldap.enabled }}
        host: {{ .Values.config.authentication.ldap.host | quote }}
        port: {{ .Values.config.authentication.ldap.port }}
        sync_time:
          {{ range .Values.config.authentication.ldap.sync_time }}
          - {{ . | quote }}
          {{ end }}
        username: {{ .Values.config.authentication.ldap.username | quote }}
        password: {{ .Values.config.authentication.ldap.password | quote }}
        base_dn: {{ .Values.config.authentication.ldap.base_dn | quote }}
        filter: {{ .Values.config.authentication.ldap.filter | quote }}
        delete_user: {{ .Values.config.authentication.ldap.delete_user }}
        field_map:
          {{ range $key, $value := .Values.config.authentication.ldap.field_map }}
          {{ $key }}: {{ $value }}
          {{ end }}
      {{ end }}
    {{- if .Values.config.plugins }}
    plugins:
    {{- range $plugin := .Values.config.plugins }}
      - {{ $plugin }}
    {{- end }}
    {{- end }}

{{- if .Values.config.k8sSupport.enable }}
    kubernetes:
      enable: true            # enable to connect k8s cluster
      kubeconfig: ""          # the Kubernetes configuration file path, default is
                              # "", so the in-cluster configuration will be used.
      app_namespaces:
        {{ range .Values.config.k8sSupport.namespaces }}
        - {{ . | quote }}
        {{ end  }}
                              # by default all namespaces (represented by "*") are watched.
      resync_interval: "6h"   # how long should manager-api
                              # re-synchronizes with Kubernetes, default is 6h,
      cluster_domain: {{ .Values.config.k8sSupport.clusterDomain | quote }}  # the local domain in the kubelet, the default is cluster.local
{{- end }}

{{- if .Values.customSchema.enabled }}
  schema.json: |-
{{ .Files.Get "conf/schema.json" | indent 4 }}
{{ end }}
