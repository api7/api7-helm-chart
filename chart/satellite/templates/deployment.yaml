apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api7-satellite.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "api7-satellite.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "api7-satellite.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "api7-satellite.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.satellite.http.port }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.satellite.grpc.port }}
              protocol: TCP
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: {{ .Values.satellite.http.port }}
            timeoutSeconds: 1
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - "sleep 30"
          volumeMounts:
            - mountPath: /skywalking/configs/satellite_config.yam
              name: satellite-config
              subPath: satellite
            {{- range .Values.satellite.secretVolumes }}
            - name: {{ .name }}
              readOnly: true
              mountPath: {{ .mountPath | default "/satellite/certs" }}
            {{- end }}

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range $key, $value :=  .Values.satellite.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}

      volumes:
        - configMap:
            name: {{ include "api7-satellite.fullname" . }}
          name: satellite-config
        {{- range .Values.satellite.secretVolumes }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
            {{- if .items }}
            items:
              {{- toYaml .items | nindent 14 }}
            {{- end }}
        {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity.enable }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ include "api7-satellite.name" . }}
              topologyKey: kubernetes.io/hostname
            weight: 100'
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
