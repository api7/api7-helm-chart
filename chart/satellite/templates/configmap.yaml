apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "api7-satellite.fullname" . }}
  namespace: {{ .Release.Namespace }}
data:
  satellite: |-
    logger:
      # The log format pattern configuration.
      log_pattern: ${SATELLITE_LOGGER_LOG_PATTERN:%time [%level][%field] - %msg}
      # The time format pattern configuration.
      time_pattern: ${SATELLITE_LOGGER_TIME_PATTERN:2006-01-02 15:04:05.000}
      # The lowest level of printing allowed.
      level: ${SATELLITE_LOGGER_LEVEL:info}

    # The Satellite self telemetry configuration.
    telemetry:
      # The space concept for the deployment, such as the namespace concept in the Kubernetes.
      cluster: ${SATELLITE_TELEMETRY_CLUSTER:satellite-cluster}
      # The group concept for the deployment, such as the service resource concept in the Kubernetes.
      service: ${SATELLITE_TELEMETRY_SERVICE:satellite-service}
      # The minimum running unit, such as the pod concept in the Kubernetes.
      instance: ${SATELLITE_TELEMETRY_SERVICE:satellite-instance}

    # The sharing plugins referenced by the specific plugins in the different pipes.
    sharing:
      clients:
        - plugin_name: "grpc-client"
          # The gRPC server address (default localhost:11800).
          server_addr: ${SATELLITE_GRPC_CLIENT:127.0.0.1:11800}
          # The TLS switch
          enable_TLS: ${SATELLITE_GRPC_ENABLE_TLS:false}
          # The file path of client.pem. The config only works when opening the TLS switch.
          client_pem_path: ${SATELLITE_GRPC_CLIENT_PEM_PATH:"client.pem"}
          # The file path of client.key. The config only works when opening the TLS switch.
          client_key_path: ${SATELLITE_GRPC_CLIENT_KEY_PATH:"client.key"}
          # InsecureSkipVerify controls whether a client verifies the server's certificate chain and host name.
          insecure_skip_verify: ${SATELLITE_GRPC_INSECURE_SKIP_VERIFY:false}
          # The file path oca.pem. The config only works when opening the TLS switch.
          ca_pem_path: ${SATELLITE_grpc_CA_PEM_PATH:"ca.pem"}
          # How frequently to check the connection
          check_period: ${SATELLITE_GRPC_CHECK_PERIOD:5}
          # The auth value when send request
          authentication: ${SATELLITE_GRPC_AUTHENTICATION:""}
      servers:
        - plugin_name: "grpc-server"
          # The address of grpc server.
          address: ${SATELLITE_GRPC_ADDRESS:":11800"}
          # The TLS cert file path.
          tls_cert_file: ${SATELLITE_GRPC_TLS_KEY_FILE:""}
          # The TLS key file path.
          tls_key_file: ${SATELLITE_GRPC_TLS_KEY_FILE:""}
        - plugin_name: "prometheus-server"
          # The prometheus server address.
          address: ${SATELLITE_PROMETHEUS_ADDRESS:":1234"}
          # The prometheus server metrics endpoint.
          endpoint: ${SATELLITE_PROMETHEUS_ENDPOINT:"/metrics"}

    # The working pipe configurations.
    pipes:
      - common_config:
          pipe_name: prometheus-fetcher
        gatherer:
          fetcher:
            plugin_name: "prometheus-metrics-fetcher"
            scrape_configs:
             {{- range .Values.satellite.scrapeConfigs }}
              - job_name: {{ .jobName }}
                metrics_path: {{ .metricsPath | default "/apisix/prometheus/metrics" }}
                scrape_interval: {{ .scrapeInterval | default "60s" }}
                tls_config:
                  ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                kubernetes_sd_configs:
                - role: pod
                  selectors:
                    - role: pod
                      label: {{ .selectorLabel }}
            {{- end }}
          queue:
            plugin_name: "memory-queue"
            # The maximum buffer event size.
            event_buffer_size: ${SATELLITE_QUEUE_EVENT_BUFFER_SIZE:5000}
        processor:
          filters:
        sender:
          fallbacker:
            plugin_name: none-fallbacker
          # The time interval between two flush operations. And the time unit is millisecond.
          flush_time: ${SATELLITE_PROMETHEUS_SENDER_FLUSH_TIME:1000}
          # The maximum buffer elements.
          max_buffer_size: ${SATELLITE_PROMETHEUS_SENDER_MAX_BUFFER_SIZE:200}
          # The minimum flush elements.
          min_flush_events: ${SATELLITE_PROMETHEUS_SENDER_MIN_FLUSH_EVENTS:1}
          client_name: grpc-client
          forwarders:
            - plugin_name: nativemeter-grpc-forwarder
