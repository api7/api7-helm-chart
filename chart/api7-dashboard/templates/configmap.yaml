#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "api7-dashboard.fullname" . }}
  namespace: {{ .Release.Namespace }}
data:
  {{- if .Values.selfRegister.enabled }}
  self-register.sh: |-
    #!/usr/bin/env sh
    echo 'Checking the running of Manager API...'
    until nc -zw 1 127.0.0.1 {{ .Values.config.http.port }}; do
      echo 'Waiting for Manager API'
      sleep 1
    done
    token=`curl -s http://127.0.0.1:{{ .Values.config.http.port }}/apisix/admin/user/login -d '{"username":"admin", "password":"admin"}' | grep -o '"token":"[^\"]*"' | awk -F : '{print $2}' | tr -d '"'`
    {{- $global := . -}}
    {{ range $idx, $cluster := .Values.config.clusters }}
    {{ with $global }}
    echo '
    {
      "name": "dashboard-route-{{ $cluster.name }}",
      "uris": ["/*"],
      "hosts": ["{{ .Values.selfRegister.host }}"],
      "upstream": {
        "type": "roundrobin",
        "nodes": {
          "{{ include "api7-dashboard.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:{{ .Values.config.http.port }}": 1
        }
      }
    }' | curl http://127.0.0.1:{{ .Values.config.http.port }}/apisix/admin/routes/E08D6599-EF67-408A-8006-17D2B592C3D4?cluster_id={{ $cluster.name }} -XPUT -H "Authorization: $token" -v -d @-
    {{ end -}}
    {{ end -}}
  {{ end }}
  conf.yaml: |-
    len: {{ len .Values.config.allowList }}
    conf:
      {{- if gt (len .Values.config.allowList) 0 }}
      allow_list:
        {{- range .Values.config.allowList }}
        - {{ . }}
        {{- end }}
      {{- end }}
      {{- if gt (len .Values.config.allowAdmin) 0 }}
      allow_admin:
        {{- range .Values.config.allowAdmin }}
        - {{ . }}
        {{- end }}
      {{- end }}
      {{- if gt (len .Values.config.trustedProxies) 0 }}
      trusted_proxies:
        {{- range .Values.config.trustedProxies }}
        - {{ . }}
        {{- end }}
      {{- end }}
      listen:
        host: 0.0.0.0     # `manager api` listening ip or host name
        port: {{ .Values.config.http.port }} # `manager api` listening port
      {{- if .Values.config.tls.enabled }}
      ssl:
        enable: true
        host: "0.0.0.0"
        port: {{ .Values.config.tls.port }}
        cert: "/usr/local/apisix-dashboard/tls/tls.crt"
        key: "/usr/local/apisix-dashboard/tls/tls.key"
        {{- if .Values.config.tls.mtls_enabled }}
        client_cert_auth: true
        trusted_ca: "/usr/local/apisix-dashboard/tls/ca.crt"
        {{- end }}
      {{- end }}
      {{- if or .Values.prometheus.builtin (gt (len .Values.prometheus.clusters) 0) }}
      prometheus:
        host:
        {{- if .Values.prometheus.builtin }}
        - "http://{{ .Release.Name }}-prometheus-server.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:80"
        {{- else -}}
          {{ range .Values.prometheus.clusters }}
        - {{ . }}
          {{ end }}
        {{- end -}}
      {{- end }}
      etcd_clusters:
      {{ range .Values.config.clusters }}
      {{- .name | indent 2 }}:
          endpoints:
          {{- range .etcd.hosts }}
          - {{ . -}}
          {{ end }}
          prefix: {{ .etcd.prefix -}}
          {{- if .etcd.auth.rbac.enabled }}
          username: {{ .etcd.auth.rbac.user | quote }}
          password: {{ .etcd.auth.rbac.password | quote }}
          {{ end }}
          {{- if .etcd.auth.tls.enabled }}
          mtls:
            key_file: "/usr/local/apisix-dashboard/{{ .name }}-etcd-ssl/{{ .etcd.auth.tls.certKeyFilename }}"
            cert_file: "/usr/local/apisix-dashboard/{{ .name }}-etcd-ssl/{{ .etcd.auth.tls.certFilename }}"
            ca_file: "/usr/local/apisix-dashboard/{{ .name }}-etcd-ssl/{{ .etcd.auth.tls.certCAFilename }}"
          {{- end }}
      {{ end }}
        user_conf:
          endpoints:
          {{ range .Values.config.selfEtcd.hosts -}}
          - {{ . }}
          {{ end }}
          {{- if .Values.config.selfEtcd.auth.rbac.enabled }}
          username: {{ .Values.config.selfEtcd.auth.rbac.user | quote }}
          password: {{ .Values.config.selfEtcd.auth.rbac.password | quote }}
          {{ end }}
          {{- if .Values.config.selfEtcd.auth.tls.enabled }}
          mtls:
            key_file: "/usr/local/apisix-dashboard/self-etcd-ssl/{{ .Values.config.selfEtcd.auth.tls.certKeyFilename }}"
            cert_file: "/usr/local/apisix-dashboard/self-etcd-ssl/{{ .Values.config.selfEtcd.auth.tls.certFilename }}"
            ca_file: "/usr/local/apisix-dashboard/self-etcd-ssl/{{ .Values.config.selfEtcd.auth.tls.certCAFilename }}"
          {{- end }}
      log:
        error_log:
          level: {{ .Values.config.log.error_log.level }}       # supports levels, lower to higher: debug, info, warn, error, panic, fatal
          file_path:
            {{ .Values.config.log.error_log.file_path }}  # supports relative path, absolute path, standard output
                            # such as: logs/error.log, /tmp/logs/error.log, /dev/stdout, /dev/stderr
        access_log:
          file_path:
            {{ .Values.config.log.access_log.file_path }}  # supports relative path, absolute path, standard output
                            # such as: logs/access.log, /tmp/logs/access.log, /dev/stdout, /dev/stderr
                            # log example: 2020-12-09T16:38:09.039+0800	INFO	filter/logging.go:46	/apisix/admin/routes/r1	{"status": 401, "host": "127.0.0.1:9000", "query": "asdfsafd=adf&a=a", "requestId": "3d50ecb8-758c-46d1-af5b-cd9d1c820156", "latency": 0, "remoteIP": "127.0.0.1", "method": "PUT", "errs": []}
    authentication:
      secret:
        {{ .Values.config.authentication.secret }}  # secret for jwt token generation.
                            # NOTE: Highly recommended to modify this value to protect `manager api`.
                            # if it's default value, when `manager api` start , it will generate a random string to replace it.
      expire_time: {{ .Values.config.authentication.expire_time }}     # jwt token expire time, in second
      {{- if gt .Values.config.authentication.allow_login_failed_times 0 }}
      allow_login_failed_times: {{.Values.config.authentication.allow_login_failed_times}}    # the maximum number of login failures allowed, if the number of failed login attempts exceeds the limit within a certain period of time, the account will be locked
      login_failed_stat_duration: {{.Values.config.authentication.login_failed_stat_duration}}  # the maximum allowable login failures statistics duration.
      login_failed_lock_duration: {{.Values.config.authentication.login_failed_lock_duration}}  # the account locked duration.
      {{ end }}
      users:
      {{ range .Values.config.authentication.users }}
        - username: {{ .username }}   # username and password for login `manager api`
          password: {{ .password }}
      {{ end }}

{{- if .Values.config.k8sSupport.enable }}
    kubernetes:
      enable: true            # enable to connect k8s cluster
      kubeconfig: ""          # the Kubernetes configuration file path, default is
                              # "", so the in-cluster configuration will be used.
      app_namespaces:
        {{ range .Values.config.k8sSupport.namespaces }}
        - {{ . | quote }}
        {{ end  }}
                              # by default all namespaces (represented by "*") are watched.
      resync_interval: "6h"   # how long should manager-api
                              # re-synchronizes with Kubernetes, default is 6h,
      cluster_domain: {{ .Values.config.k8sSupport.clusterDomain | quote }}  # the local domain in the kubelet, the default is cluster.local
{{- end }}

