#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

nameOverride: ""
fullnameOverride: ""

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# replicaCount represents the number of desired api7-dashboard replicas.
# NOTE: as api7-dashboard doesn't share the login states, DO NOT touch this
# value.
replicaCount: 1
# clusterDomain is the domain suffix for target Kubernetes cluster.
clusterDomain: cluster.local
# labels to filter the deployed Kubernetes worker ndoes.
nodeSelector: {}

image:
  # Registry for the api7-dashboard image.
  registry: docker.io
  # Repository for the api7-dashboard image
  repository: api7/api7-dashboard
  # Tag for the api7-dashboard image
  tag: dev
  # The image pull policy for api7-dashboard image
  pullPolicy: IfNotPresent

imagePullSecrets: []

# Whether to register Route and Upstream to API7, so that API7-Dashboard can be
# accessed through API7.
# Basically it should be executed when you install API7-Dashboard for the first time.
selfRegister:
  enabled: false
  host: api7-dashboard.apiseven.com

service:
  # The api7-dashboard service type.
  type: ClusterIP
  # loadBalancerIP: a.b.c.d
  loadBalancerSourceRanges: []
# Note if builtin is false and clusters field are empty, prometheus won't be
# configured in api7-dashboard.
prometheus:
  # Use builtin Prometheus server or reusing existing Kubernetes server.
  builtin: true
  # Existing prometheus clusters should be filled here
  clusters: []

# api7-dashboard configurations
config:
  # Key prefix used by api7-dashboard in ETCD cluster.
  allowList:
    - 127.0.0.0/24
  http:
    enabled: true
    servicePort: 9000
    port: 9000
  tls:
    enabled: false
    servicePort: 9443
    port: 9443
    secretName: ""
    mtls_enabled: true

  # Multiple clusters configuration
  clusters:
    - name: cluster_1
      etcd:
        hosts: []
        service:
          port: 2379
        auth:
          rbac:
            enabled: false
        prefix: /apisix
  # selfEtcd configures the etcd cluster used to store
  # metadata.
  selfEtcd:
    hosts: []
    service:
      port: 2379
    auth:
      rbac:
        enabled: false

   # serviceAccount
  k8sSupport:
    enable: true
    namespaces: ["*"]
    clusterDomain: "cluster.local"
    clusterRole: "services-lister"
    serviceAccount: "api7-account"
    clusterRoleBinding: "api7-services-account-binding"

